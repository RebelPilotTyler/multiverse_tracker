name: Update Multiverse Tracker Data

on:
  repository_dispatch:
    types: [update-world-field]

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure Git Authentication
      - name: Configure Git Authentication
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/RebelPilotTyler/multiverse_tracker.git

      # Step 3: Create Payload File
      - name: Create Payload File
        run: |
          echo '${{ toJson(github.event.client_payload) }}' > payload.json

      # Step 4: Extract Variables
      - name: Extract Variables
        run: |
          worldIndex=$(jq -r '.worldIndex' payload.json)
          key=$(jq -r '.key' payload.json)
          newValue=$(jq -r '.newValue' payload.json)
          echo "World Index: $worldIndex"
          echo "Key: $key"
          echo "New Value: $newValue"

      - name: Debug Variables
        run: |
          echo "Payload:"
          cat payload.json
          worldIndex=$(jq -r '.worldIndex' payload.json)
          key=$(jq -r '.key' payload.json)
          newValue=$(jq -r '.newValue' payload.json)
          echo "Extracted Variables:"
          echo "worldIndex=$worldIndex"
          echo "key=$key"
          echo "newValue=$newValue"

      - name: Validate Variables
        run: |
          worldIndex=$(jq -r '.worldIndex' payload.json)
          key=$(jq -r '.key' payload.json)
          newValue=$(jq -r '.newValue' payload.json)
      
          if [[ -z "$worldIndex" || -z "$key" || -z "$newValue" || "$worldIndex" == "null" || "$key" == "null" || "$newValue" == "null" ]]; then
            echo "Error: Missing or invalid payload data"
            echo "worldIndex=$worldIndex"
            echo "key=$key"
            echo "newValue=$newValue"
            exit 1
          fi
    
      # Step 5: Update worlds.json
      - name: Update worlds.json
        run: |
          worldIndex=$(jq -r '.worldIndex' payload.json)
          key=$(jq -r '.key' payload.json)
          newValue=$(jq -r '.newValue' payload.json)

          # Transform dot-separated key into an array of keys for jq
          path=$(echo "$key" | awk -F. '{ printf "[\"%s\"", $1; for (i=2; i<=NF; i++) printf ", \"%s\"", $i; printf "]" }')

          # Debugging: Print the transformed path
          echo "Transformed path: $path"

          # Update the JSON file
          jq ".[${worldIndex}] |= setpath($path; \"$newValue\")" worlds.json > temp.json
          mv temp.json worlds.json

          # Commit and push changes
          git add worlds.json
          git commit -m "Updated field $key for world index $worldIndex"
          git push

      - name: Send message to Discord
        env:
          DISCORD_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          MESSAGE_CONTENT: "Workflow triggered successfully!"
        run: node discordBot.js
         